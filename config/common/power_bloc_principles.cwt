types = {
    type[power_bloc_principle] = {
        path = "game/common/power_bloc_principles"
        file_extension = .txt
        images = {
            ## primary
            icon = icon
        }
    }
}

power_bloc_principle = {
    ### Icon used to represent this Power Bloc Principle
    icon = filepath

    ### Background used to represent this Power Bloc Principle
    background = filepath

    ## cardinality = 0..1
    ## push_scope = country
    ### Determines whether the principle is visible in the list when forming a power bloc.
    visible = single_alias_right[trigger_clause]

    ## cardinality = 0..1
    ### Determines whether members may invest into other member countries of lower ranks. Does not generate a tooltip, so a dummy modifier is required to show this effect (country_higher_leverage_from_economic_dependence_bool and power_bloc_allow_foreign_investment_lower_rank_bool).
    allows_foreign_investment_in_lower_rank = bool

    ## cardinality = 0..1
    ## push_scope = country
    ### Determines whether the principle is selectable in the list when forming a power bloc.
    possible = single_alias_right[trigger_clause]

    ## cardinality = 0..inf
    ### Can be repeated. Other principles referenced in this way are incompatible with this principle.
    incompatible_with = <power_bloc_principle>

    ## cardinality = 0..1
    ### This modifier is added to the power bloc
    power_bloc_modifier = single_alias_right[modifier_clause]

    ## cardinality = 0..1
    ### This modifier is added to the leader and every member of the power bloc
    participant_modifier = single_alias_right[modifier_clause]

    ## cardinality = 0..1
    ### This modifier is added to the leader of the power bloc
    leader_modifier = single_alias_right[modifier_clause]

    ## cardinality = 0..1
    ### This modifier is added to every member of the power bloc except the leader
    member_modifier = single_alias_right[modifier_clause]

    ## cardinality = 0..1
    ### This modifier is added to every member of the power bloc except the leader
    non_leader_modifier = single_alias_right[modifier_clause]

    ## cardinality = 0..1
    ### Which institution it add additional modifiers to
    institution = <institution>

    ## cardinality = 0..1
    ### Modifiers that the principle provides the institution with
    institution_modifier = single_alias_right[modifier_clause]

    ### How likely AI will pick this principle (100 = base, 200 = good, 1000 = pick at any cost)
    ai_weight = single_alias_right[formula]

}